generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  firstName  String
  lastName   String
  phone      String?
  address    String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  products   Product[]
  sales      Sale[]    @relation("Buyer")
  purchases  Sale[]    @relation("Seller")
  rentalsOut Rental[]  @relation("RentedOut")
  rentalsIn  Rental[]  @relation("RentedIn")
}

model Product {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  price       Float
  rentPrice   Float
  categories  Category[]
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  sales       Sale[]
  rentals     Rental[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  isDeleted   Boolean    @default(false)
  isAvailable Boolean    @default(true)
}

model Sale {
  id        Int      @id @default(autoincrement())
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  buyerId   Int
  buyer     User     @relation("Buyer", fields: [buyerId], references: [id])
  sellerId  Int
  seller    User     @relation("Seller", fields: [sellerId], references: [id])
  createdAt DateTime @default(now())
}

model Rental {
  id         Int      @id @default(autoincrement())
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
  lenderId   Int
  lender     User     @relation("RentedOut", fields: [lenderId], references: [id])
  borrowerId Int
  borrower   User     @relation("RentedIn", fields: [borrowerId], references: [id])
  fromDate   DateTime
  toDate     DateTime
  createdAt  DateTime @default(now())
}

enum Category {
  ELECTRONICS
  FURNITURE
  HOME_APPLIANCES
  SPORTING_GOODS
  OUTDOOR
  TOYS
}
